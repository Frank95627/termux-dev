#!/bin/bash

source ~/.termux-dev/env/env.sh
source ~/.termux-dev/env/config.sh

argument=$1
option=$2

function option() {
  echo -e ${red}"Invalid option!"${white}
}

if [[ "${argument}" == "update" ]]; then
  source ${TermuxDev}/.dev/scripts/update.sh
elif [[ "${argument}" == "config" ]]; then
  if [[ "${option}" == "login" ]]; then
    source ${TermuxDev}/.dev/functions/config/login.sh
  elif [[ ${option} == "banner" ]]; then
    source ${TermuxDev}/.dev/functions/config/banner.sh
  else
    option
  fi
elif [[ "${argument}" == "new" ]]; then
  if [[ "${option}" == "token" ]]; then
    source ${TermuxDev}/.dev/functions/new/token.sh
  elif [[ "${option}" == "note" ]]; then
    source ${TermuxDev}/.dev/functions/new/note.sh
  else
    option
  fi
elif [[ "${argument}" == "server" ]]; then
  if [[ "${option}" == "node" ]]; then
    source ${TermuxDev}/.dev/functions/server/node.sh
  elif [[ "${option}" == "php" ]]; then
    source ${TermuxDev}/.dev/functions/server/php.sh
  elif [[ "${option}" == "python" ]]; then
    source ${TermuxDev}/.dev/functions/server/python.sh
  else
    option
  fi
elif [[ "${argument}" == "show" ]]; then
  if [[ "${option}" == "tokens" ]]; then
    source ${TermuxDev}/.dev/functions/show/tokens.sh
  elif [[ "${option}" == "notes" ]]; then
    source ${TermuxDev}/.dev/functions/show/notes.sh
  elif [[ "${option}" == "commands" ]]; then
    source ${TermuxDev}/.dev/functions/show/commands.sh
  else
    option
  fi
else
  source ${TermuxDev}/.dev/scripts/help.sh
fi
